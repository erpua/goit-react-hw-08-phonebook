{"version":3,"sources":["views/LoginView/SignInView.js"],"names":["useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","mapDispatchToProps","onLogin","authOperations","logIn","connect","classes","useState","unitEmail","setEmail","unitPassword","setPassword","container","component","className","item","xs","sm","md","Paper","elevation","square","variant","onSubmit","event","preventDefault","email","password","handleSubmit","required","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","target","color"],"mappings":"gQAWMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQ,SAEVC,MAAO,CACLC,gBACE,oFACFC,iBAAkB,YAClBC,gBACyB,SAAvBN,EAAMO,QAAQC,KACVR,EAAMO,QAAQE,KAAK,IACnBT,EAAMO,QAAQE,KAAK,KACzBC,eAAgB,QAChBC,mBAAoB,UAEtBC,MAAO,CACLC,OAAQb,EAAMc,QAAQ,EAAG,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,MAE3CC,KAAM,CACJC,MAAO,MACPC,UAAWvB,EAAMc,QAAQ,IAE3BU,OAAQ,CACNX,OAAQb,EAAMc,QAAQ,EAAG,EAAG,QA8E1BW,EAAqB,CACzBC,QAASC,IAAeC,OAGXC,sBAAQ,KAAMJ,EAAdI,EA9EI,SAAC,GAAiB,IAAfH,EAAc,EAAdA,QACdI,EAAUhC,IADkB,EAGJiC,mBAAS,IAHL,mBAG3BC,EAH2B,KAGhBC,EAHgB,OAIEF,mBAAS,IAJX,mBAI3BG,EAJ2B,KAIbC,EAJa,KAYlC,OACE,eAAC,IAAD,CAAMC,WAAS,EAACC,UAAU,OAAOC,UAAWR,EAAQ7B,KAApD,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAMsC,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGJ,UAAWR,EAAQ3B,QACvD,cAAC,IAAD,CAAMoC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGL,UAAWM,IAAOC,UAAW,EAAGC,QAAM,EAAvE,SACE,sBAAKP,UAAWR,EAAQlB,MAAxB,UACE,cAAC,IAAD,CAAYyB,UAAU,KAAKS,QAAQ,KAAnC,qBAGA,uBACER,UAAWR,EAAQT,KACnB0B,SAAU,SAAAC,GACRA,EAAMC,iBAlBG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7BzB,EAAQ,CAAEwB,QAAOC,aACjBlB,EAAS,IACTE,EAAY,IAgBFiB,CAAa,CACXF,MAAOlB,EACPmB,SAAUjB,KANhB,UAUE,cAAC,IAAD,CACEY,QAAQ,WACRjC,OAAO,SACPwC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,MAAO5B,EACP6B,SAAU,SAAAb,GAAK,OAAIf,EAASe,EAAMc,OAAOF,UAE3C,cAAC,IAAD,CACEd,QAAQ,WACRjC,OAAO,SACPwC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNhD,KAAK,WACL+C,GAAG,WACHG,aAAa,mBACbE,MAAO1B,EACP2B,SAAU,SAAAb,GAAK,OAAIb,EAAYa,EAAMc,OAAOF,UAG9C,cAAC,IAAD,CACEpD,KAAK,SACL8C,WAAS,EACTR,QAAQ,YACRiB,MAAM,UACNzB,UAAWR,EAAQN,OALrB","file":"static/js/6.9106232a.chunk.js","sourcesContent":["import { connect } from 'react-redux';\nimport { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport authOperations from '../../redux/auth/auth-operations';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage:\n      'url(https://i.pinimg.com/originals/d5/84/31/d58431cd37515f48d57312c4c7e5964f.jpg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'dark'\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '80%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignInSide = ({ onLogin }) => {\n  const classes = useStyles();\n\n  const [unitEmail, setEmail] = useState('');\n  const [unitPassword, setPassword] = useState('');\n\n  const handleSubmit = ({ email, password }) => {\n    onLogin({ email, password });\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign In\n          </Typography>\n          <form\n            className={classes.form}\n            onSubmit={event => {\n              event.preventDefault();\n              handleSubmit({\n                email: unitEmail,\n                password: unitPassword,\n              });\n            }}\n          >\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={unitEmail}\n              onChange={event => setEmail(event.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={unitPassword}\n              onChange={event => setPassword(event.target.value)}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapDispatchToProps = {\n  onLogin: authOperations.logIn,\n};\n\nexport default connect(null, mapDispatchToProps)(SignInSide);\n"],"sourceRoot":""}