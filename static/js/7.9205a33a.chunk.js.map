{"version":3,"sources":["views/RegisterView/SignUpView.js"],"names":["useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","mapDispatchToProps","onSubmit","authOperations","register","connect","classes","useState","unitName","setName","unitEmail","setEmail","unitPassword","setPassword","handleSubmit","name","email","password","container","component","className","item","xs","sm","md","Paper","elevation","square","variant","event","preventDefault","required","fullWidth","id","label","autoComplete","autoFocus","value","onChange","target","color"],"mappings":"gQAWMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,OAAQ,SAEVC,MAAO,CACLC,gBACE,oFACFC,iBAAkB,YAClBC,gBACyB,SAAvBN,EAAMO,QAAQC,KACVR,EAAMO,QAAQE,KAAK,IACnBT,EAAMO,QAAQE,KAAK,KACzBC,eAAgB,QAChBC,mBAAoB,UAEtBC,MAAO,CACLC,OAAQb,EAAMc,QAAQ,EAAG,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNL,OAAQb,EAAMc,QAAQ,GACtBR,gBAAiBN,EAAMO,QAAQY,UAAUC,MAE3CC,KAAM,CACJC,MAAO,MACPC,UAAWvB,EAAMc,QAAQ,IAE3BU,OAAQ,CACNX,OAAQb,EAAMc,QAAQ,EAAG,EAAG,QA8F1BW,EAAqB,CACzBC,SAAUC,IAAeC,UAGZC,sBAAQ,KAAMJ,EAAdI,EA9FI,SAAC,GAAkB,IAAhBH,EAAe,EAAfA,SACdI,EAAUhC,IADmB,EAGPiC,mBAAS,IAHF,mBAG5BC,EAH4B,KAGlBC,EAHkB,OAILF,mBAAS,IAJJ,mBAI5BG,EAJ4B,KAIjBC,EAJiB,OAKCJ,mBAAS,IALV,mBAK5BK,EAL4B,KAKdC,EALc,KAO7BC,EAAe,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACnCf,EAAS,CAAEa,OAAMC,QAAOC,aACxBR,EAAQ,IACRE,EAAS,IACTE,EAAY,KAGd,OACE,eAAC,IAAD,CAAMK,WAAS,EAACC,UAAU,OAAOC,UAAWd,EAAQ7B,KAApD,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAM4C,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGJ,UAAWd,EAAQ3B,QACvD,cAAC,IAAD,CAAM0C,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGL,UAAWM,IAAOC,UAAW,EAAGC,QAAM,EAAvE,SACE,sBAAKP,UAAWd,EAAQlB,MAAxB,UACE,cAAC,IAAD,CAAY+B,UAAU,KAAKS,QAAQ,KAAnC,qBAGA,uBACER,UAAWd,EAAQT,KACnBK,SAAU,SAAA2B,GACRA,EAAMC,iBACNhB,EAAa,CACXC,KAAMP,EACNQ,MAAON,EACPO,SAAUL,KAPhB,UAWE,cAAC,IAAD,CACEgB,QAAQ,WACRvC,OAAO,SACP0C,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNnB,KAAK,OACLoB,aAAa,KACbC,WAAS,EACTC,MAAO7B,EACP8B,SAAU,SAAAT,GAAK,OAAIpB,EAAQoB,EAAMU,OAAOF,UAE1C,cAAC,IAAD,CACET,QAAQ,WACRvC,OAAO,SACP0C,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNnB,KAAK,QACLoB,aAAa,QACbC,WAAS,EACTC,MAAO3B,EACP4B,SAAU,SAAAT,GAAK,OAAIlB,EAASkB,EAAMU,OAAOF,UAE3C,cAAC,IAAD,CACET,QAAQ,WACRvC,OAAO,SACP0C,UAAQ,EACRC,WAAS,EACTjB,KAAK,WACLmB,MAAM,WACNlD,KAAK,WACLiD,GAAG,WACHE,aAAa,mBACbE,MAAOzB,EACP0B,SAAU,SAAAT,GAAK,OAAIhB,EAAYgB,EAAMU,OAAOF,UAG9C,cAAC,IAAD,CACErD,KAAK,SACLgD,WAAS,EACTJ,QAAQ,YACRY,MAAM,UACNpB,UAAWd,EAAQN,OALrB","file":"static/js/7.9205a33a.chunk.js","sourcesContent":["import { connect } from 'react-redux';\nimport { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport authOperations from '../../redux/auth/auth-operations';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage:\n      'url(https://i.pinimg.com/originals/d5/84/31/d58431cd37515f48d57312c4c7e5964f.jpg)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'dark'\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '80%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignUpSide = ({ onSubmit }) => {\n  const classes = useStyles();\n\n  const [unitName, setName] = useState('');\n  const [unitEmail, setEmail] = useState('');\n  const [unitPassword, setPassword] = useState('');\n\n  const handleSubmit = ({ name, email, password }) => {\n    onSubmit({ name, email, password });\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          <form\n            className={classes.form}\n            onSubmit={event => {\n              event.preventDefault();\n              handleSubmit({\n                name: unitName,\n                email: unitEmail,\n                password: unitPassword,\n              });\n            }}\n          >\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n              autoComplete=\"of\"\n              autoFocus\n              value={unitName}\n              onChange={event => setName(event.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={unitEmail}\n              onChange={event => setEmail(event.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={unitPassword}\n              onChange={event => setPassword(event.target.value)}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapDispatchToProps = {\n  onSubmit: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(SignUpSide);\n"],"sourceRoot":""}